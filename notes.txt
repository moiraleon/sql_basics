SELECT first_name FROM person
CMD Keyword 
        Identifier

[ SELECT clause  ][FROM clause]

SELECT statments, separate multiple selects with comma, end with semicolon
INSERT statment, INSERT INTO table_name(irst_name,last_name) Values('Ted','ebeaar');
UPDATE statment, UPDATE table_name SET last_name= 'Ybear' WHERE id=1; wihtout WHERE every row will be updated;
DELETE statment,DELETE FROM table_name WHERE id=1;
                                      [restriction]

table names are usually singular
colums are prefixed ny table name ie. person_last_name

SELECT STATEMENT
        [select list]
SELECT 'Hello','World'
[slect keyword][select clause]


SELECT * FROM table_name (wild card select all)

finding a value from a specific table
SELECT person.first_name from person;

ALIAS to save typing

SELECT p.first_name, p.last_name FROM person p;

USE table_name at top will direct sql requests that follow to specific database
 

ALIAS column names
USE contacts;
SELECT p.person_last_name as LastName;
FROM person p;

you can also right click on database to set as default or set new sequel tab for that database

SELECT DISTINCT - takes all values that would have been returned and only return one row for each DISTINCT value, Distinct can also be applied to multiple columns and provides a distinct combination

WHERE clause

SELECT p.last_name
FROM person p
WHERE p.first_name ='Jon';

AND OR keywords
BETWEEN, LIKE, IN, IS, IS NOT keywords

LIKE is a fuzzy match J% where name begins with J  syntax LIKE '%J'

IN is for looking for multiple values

WHERE State  IN('AZ','CA','MT')

without las name or phone number
WHERE phone IS NULL;

or IS NOT NULL;

Where clause exists to restrict the result of our queries



ORDER BY and GROUP BY CLAUSES

ORDER by is alphabetical

SET funtions 

MAX MIN AVG SUM 

SELECT COUNT(p.person_first_name)
FROM person p
WHERE p.person_last_name = 'Leon';'


GETTTING COUNT OF DISTINCT FIRST NAMES 
SELECT COUNT (DISTINCT p.person_first_name)
FROM person p;



SELECT COUNT(p.person_first_name), p.person_first_name
FROM person p
GROUP BY p.person_first_name

(group of each name and how many)

HAVING adds specification
ex
SELECT COUNT(p.person_first_name), p.person_first_name
FROM person p
GROUP BY p.person_first_name
HAVING COUNT(p.person_first_name)>1; allows us to hone in on data

OR ALIAS column

SELECT COUNT(p.person_first_name) as FIRSTNAMECOUNT, p.person_first_name
FROM person p
GROUP BY p.person_first_name
HAVING FIRSTNAMECOUNT >1; allows us to hone in on data

THE JOIN CLAUSE 

CROSS JOIN NO NO!

INNER JOIN -joining two tables on  common value - does not work with null values

SELECT 
p.first_name, p.last_name, e.email_address
FROM person p,
INNER JOIN 
email_address e 
ON
p.person_id =e.email_address_person_id

OUTER JOIN -works with null values


LEFT OUTER JOIN   values|null
RIGHT OUTER JOIN  null|values


FULL OUTER JOIN includes everything allowing tables to include null values throughout
MYSQL does not support FULL OUTER JOIN

IF want both left and right nulls ie full ouer joining

create two requests and join with UNION DISTINCT key word

SELF JOINS are great with hierarchal data where we want to link a manager code to its employees